{"version":3,"sources":["webpack:///./src/views/demo/plugins/mock/mixins/function.js"],"names":["__webpack_exports__","data","fn","title","code","json","name","say","this","mocked","methods","fnMock","JSON","stringify","Mock","mock"],"mappings":"0JAEeA,EAAA,YACbC,KADa,WAEX,MAAO,CAELC,GAAI,CACFC,MAAO,KACPC,KAAI,6FAMJC,KAAM,CACJC,KAAQ,YACRC,IAAO,WACL,MAAO,QAAUC,KAAKF,OAG1BG,OAAQ,MAIdC,QAAS,CACPC,OADO,WAELH,KAAKN,GAAGO,OAASG,KAAKC,UAAUC,IAAKC,KAAKP,KAAKN,GAAGG,MAAO,KAAM","file":"js/chunk-2d22fc97.6fa6f82e.js","sourcesContent":["/* eslint-disable */\nimport Mock from 'mockjs'\nexport default {\n  data () {\n    return {\n      // 测试函数\n      fn: {\n        title: '函数',\n        code: `{\n  \"name\": \"FairyEver\",\n  \"say\": function() {\n    return 'I AM ' + this.name\n  }\n}`,\n        json: {\n          \"name\": \"FairyEver\",\n          \"say\": function() {\n            return 'I AM ' + this.name\n          }\n        },\n        mocked: ''\n      }\n    }\n  },\n  methods: {\n    fnMock () {\n      this.fn.mocked = JSON.stringify(Mock.mock(this.fn.json), null, 2)\n    }\n  }\n}\n"],"sourceRoot":""}